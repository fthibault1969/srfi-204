(cond-expand
  (gauche
    (import (gauche base)
	    (scheme base)
	    (scheme char)
	    (scheme cxr)
	    (util match)
	    (srfi-64))
    (define non-linear-pattern #f)
    (define non-linear-pred #f)
    (define non-linear-field #f)
    (define record-implemented #t)
    (define test-name "false-branch-srfi-test")
    (define scheme-version-name (string-append "gauche-" (gauche-version)))
    (include "./test/srfi-common.scm"))
  (guile
    (import (guile)
	    (srfi srfi-64)
	    (srfi srfi-9)
	    (rnrs unicode))
    (include-from-path "srfi-204/srfi-204.scm")
    (define non-linear-pattern #t)
    (define non-linear-pred #t)
    (define non-linear-field #t)
    (define record-implemented #f)
    (define test-name  "false-branch-srfi-test")
    (define scheme-version-name (string-append "guile-" (version)))
    (include-from-path "./test/srfi-common.scm")
    ))

